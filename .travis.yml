# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Travis file for Continuous integration.
#
# Version: 2015-01-13 V1
# Author: Andres Gomez Casanova (AngocA)
# Made in COLOMBIA.

before_install:
  # Parallel download
  - mvn > /dev/null &
  - sudo apt-get install aria2 curl -y
  - sudo ./travis/update.sh > /dev/null &

  # Retrieves and extracts the DB2 binaries
  # If it does not work, change it according to the next page:
  # https://github.com/angoca/db2-docker/wiki/db2-link-server_t
  - DOWNLOAD_LINK=$(curl --url https://raw.githubusercontent.com/wiki/angoca/db2-docker/db2-link-server_t.md -s | tail -1) ; echo ${DOWNLOAD_LINK} ; cd /tmp ; aria2c -x 16 ${DOWNLOAD_LINK} ; tar zxvf v10.5fp5_linuxx64_server_t.tar.gz

  # Retrieves and extract log4db2
  - cd ; wget https://github.com/angoca/log4db2/releases/download/log4db2-1-Beta-A/log4db2.tar.gz ; tar zxvf log4db2.tar.gz

  # Retrieves and extract db2unit
  - cd ; wget https://github.com/angoca/db2unit/releases/download/db2unit-1/db2unit.tar.gz ; tar zxvf db2unit.tar.gz


  # INSTALL

  # Install the required libraries
  - sudo apt-get update -qq
  - sudo apt-get install libaio1 lib32stdc++6 -y
  - sudo apt-get install -qq libpam-ldap:i386
  - sudo ln -s /lib/i386-linux-gnu/libpam.so.0 /lib/libpam.so.0

  # Checks the prerequisites
  - cd /tmp/server_t ; ./db2prereqcheck -l
  # Install DB2 and creates an instance (Response file)
  - sudo ./db2setup -r  ${TRAVIS_BUILD_DIR}/travis/db2.rsp || cat /tmp/db2setup.log
  # Changes the security
  - sudo usermod -a -G db2iadm1 $USER
  - sudo chsh -s /bin/bash db2inst1
  - sudo su - db2inst1 -c "db2 update dbm cfg using SYSADM_GROUP db2iadm1 ; db2stop ; db2start"
  # Creates the database
  - sudo su - db2inst1 -c "db2 create db travis ; db2 connect to travis ; db2 grant dbadm on database to user $USER"
  - . ~db2inst1/sqllib/db2profile ; db2 connect to travis

install:
  # Install log4db2
  - cd ; cd log4db2 ; . ./install

  # Install db2unit
  - cd ; cd db2unit ; . ./install

  # Install your code
  # - db2 -tf xxx

script:
  # Execute your scripts
  # - db2 "call db2unit.run_suite('MY_SUITE')"
  - echo Hola

after_script:
  - . ~db2inst1/sqllib/db2profile ; db2 "CALL DB2UNIT.REPORT_RECENT_EXECUTIONS"

after_failure:
  # If there is any error, shows the logs
  - cat /home/db2inst1/sqllib/db2dump/db2diag.log
  - db2 "call logadmin.logs"
  - db2 "select * from DB2UNIT_1.EXECUTION_REPORTS"
  - db2 "select * from MY_SUITE.REPORT_TESTS"
  - db2 "export to /tmp/sorts.txt of del select * from DB2UNIT_1.SORTS" ; cat /tmp/sorts.txt
  - cat /home/db2inst1/sqllib/db2dump/db2diag.log

